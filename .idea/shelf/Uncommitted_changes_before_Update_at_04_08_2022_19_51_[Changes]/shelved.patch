Index: src/GUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\nIJ Sheets:\r\nMulti Cursor: Alt + Shift + Click\r\n */\r\n\r\nimport ausstattung.*;\r\nimport buchung.Dozent;\r\nimport serviceLocator.ServiceLocator;\r\nimport verwaltung.Haus;\r\nimport verwaltung.Raum;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\n\r\npublic class GUI extends JFrame {\r\n    // Menü Elemente\r\n    private JMenuBar hauptMenue = new JMenuBar();\r\n\r\n    private JMenu raumMenue = new JMenu(\"Raum\");\r\n    private JMenu inventarMenue = new JMenu(\"Inventar\");\r\n    private JMenu dozentenMenue = new JMenu(\"Dozenten\");\r\n\r\n    private JMenuItem raumHinzufuegen = new JMenuItem(\"Raum hinzufügen\");\r\n    private JMenuItem raumSuchenUndBuchen = new JMenuItem(\"Raum suchen und buchen\");\r\n    private JMenuItem raumBearbeiten = new JMenuItem(\"Raum bearbeiten\");\r\n\r\n    private JMenuItem inventur = new JMenuItem(\"Inventur\");\r\n    private JMenuItem inventarBearbeiten = new JMenuItem(\"Inventar suchen/bearbeiten\");\r\n\r\n    private JMenuItem dozentTerminplan = new JMenuItem(\"Dozenten Terminplan\");\r\n    private JMenuItem dozentHinzufuegen = new JMenuItem(\"Dozent hinzufügen\");\r\n    private JMenuItem dozentLoeschen = new JMenuItem(\"Dozent löschen\");\r\n\r\n    // GUI Elemente: Panels, Labels, ComboBox, TextField. TextAreas\r\n    private JPanel panelMain;\r\n    private JPanel panelRaumHinzufuegen;\r\n    private JPanel panelRaumSuchenBuchen;\r\n    private JPanel panelInventur;\r\n    private JPanel panelInventarBearbeiten;\r\n    private JPanel panelDozentLoeschen;\r\n    private JPanel panelDozentenTerminplan;\r\n    private JPanel panelFooter;\r\n\r\n    private JLabel raumHinzufuegenTitel;\r\n    private JLabel dozTerminplanTitel;\r\n    private JLabel dozentLoeschenTitel;\r\n    private JLabel inventarsucheTitel;\r\n    private JLabel raumsucheTitel;\r\n    private JPanel panelStartseite;\r\n    private JLabel startseiteTitel;\r\n    private JLabel startseiteBild;\r\n    private JLabel footerContent;\r\n    private JTextField raumsucheStartzeitInput;\r\n    private JTextField raumsucheEndzeitInput;\r\n    private JTextField raumsucheTischeInput;\r\n    private JTextField raumsucheStuehleInput;\r\n    private JTextField raumsucheBeamerInput;\r\n    private JTextField raumsucheKamerasInput;\r\n    private JLabel raumsucheStartTitel;\r\n    private JLabel raumsucheEndeTitel;\r\n    private JLabel raumsucheTischeTitel;\r\n    private JLabel raumsucheStuehleTitel;\r\n    private JLabel raumsucheBeamerTitel;\r\n    private JLabel raumsucheKamerasTitel;\r\n    private JButton raumsucheSuchen;\r\n    private JTextField raumsuchePCInput;\r\n    private JTextField raumsucheLautsprecherInput;\r\n    private JTextField raumsucheKreidetafelnInput;\r\n    private JTextField raumsucheSmartboardInput;\r\n    private JLabel raumsuchePCTitel;\r\n    private JLabel raumsucheLautsprecherTitel;\r\n    private JLabel raumsucheSmartboardTitel;\r\n    private JLabel raumsucheKreidetafelTitel;\r\n    private JLabel raumsucheWhiteboardTitel;\r\n    private JLabel raumsucheMikrofoneTitel;\r\n    private JTextField raumsucheWhiteboardsInput;\r\n    private JTextField raumsucheMikrofoneInput;\r\n    private JLabel raumHinzufuegenNummerTitel;\r\n    private JTextField raumHinzufuegenNummerInput;\r\n    private JLabel raumHinzufuegenHausTitel;\r\n    private JButton raumHinzufuegenButton;\r\n    private JPanel panelRaumBearbeiten;\r\n    private JLabel raumbearbeitenTitel;\r\n    private JPanel panelDozentHinzufuegen;\r\n    private JLabel dozentHinzufuegenTitel;\r\n    private JTextArea raumHinzufuegenBestaetigung;\r\n    private JTextField raumbearbeitenRaumIDInput;\r\n    private JButton raumbearbeitenIDAendernCheck;\r\n    private JLabel raumbearbeitenRaumlisteTitel;\r\n    private JPanel panelRaumBearbeitenDetails;\r\n    private JLabel raumbearbeitenRaumIDNeuTitel;\r\n    private JTextField raumbearbeitenRaumIDNeuInput;\r\n    private JTextArea raumbearbeitenBestaetigung;\r\n    private JTextArea raumsuchenbuchenBestaetigung;\r\n    private JTextField buchenRaumnummerInput;\r\n    private JTextField buchenDozentInput;\r\n    private JLabel buchenRaumnummerTitel;\r\n    private JLabel buchenDozentTitel;\r\n    private JButton buchenCheck;\r\n    private JLabel inventurTitel;\r\n    private JLabel dozentHinzufuegenInputTitel;\r\n    private JTextField dozentHinzufuegenInput;\r\n    private JButton dozentHinzufuegenButton;\r\n    private JTextArea dozentHinzufuegenBestaetigung;\r\n    private JTextArea inventurBestaetigung;\r\n    private JLabel dozTerminplanDozAuswahlTitel;\r\n    private JLabel dozTerminplanT1Titel;\r\n    private JLabel dozTerminplanT3Titel;\r\n    private JLabel dozTerminplanT7Titel;\r\n    private JLabel dozTerminplanT5Titel;\r\n    private JLabel dozTerminplanT6Titel;\r\n    private JLabel dozTerminplanT2Titel;\r\n    private JLabel dozTerminplanDonnerstagTitel;\r\n    private JLabel dozTerminplanPlatzhalter;\r\n    private JLabel dozTerminplanW1Titel;\r\n    private JLabel dozTerminplanW2Titel;\r\n    private JLabel dozTerminplanW3Titel;\r\n    private JLabel dozTerminplanW4Titel;\r\n    private JLabel dozTerminplanW5Titel;\r\n    private JLabel dozTerminplanW6Titel;\r\n    private JLabel dozTerminplanW7Titel;\r\n    private JLabel dozTerminplanW8Titel;\r\n    //private JComboBox raumbearbeitenHinzufügenInput;\r\n    private JLabel raumbearbeitenHinzufuegenTitel;\r\n    private JLabel raumbearbeitenVeraendernTitel;\r\n    private JButton raumbearbeitenHinzufuegenCheck;\r\n    private JButton raumbearbeitenVeraendernCheck;\r\n    private JComboBox raumbearbeitenHinzufuegenTypInput;\r\n    private JComboBox raumbearbeitenHinzufuegenArtInput;\r\n    private JComboBox raumbearbeitenRaumlisteInput;\r\n    private JComboBox raumbearbeitenVeraendernZustandInput;\r\n    private JComboBox raumbearbeitenVeraendernAusstattungInput;\r\n    private JComboBox buchenRaumnummerSelectInput;\r\n    private JComboBox buchenDozentSelectInput;\r\n    private JComboBox raumHinzufuegenHausInput;\r\n    private JScrollPane panelScrollRaumbearbeiten;\r\n    private JSeparator raumbearbeitenSeperator;\r\n    private JComboBox dozentLoeschenDozListe;\r\n    private JButton dozentLoeschenCheck;\r\n    private JLabel dozentLoeschenNameTitel;\r\n    private JTextArea dozentLoeschenBestaetigung;\r\n    private JTextArea dozTerminplanW1D1Output;\r\n    private JTextArea dozTerminplanW1D2Output;\r\n    private JTextArea dozTerminplanW1D3Output;\r\n    private JTextArea dozTerminplanW1D4Output;\r\n    private JTextArea dozTerminplanW1D5Output;\r\n    private JTextArea dozTerminplanW1D6Output;\r\n    private JTextArea dozTerminplanW2D1Output;\r\n    private JTextArea dozTerminplanW2D2Output;\r\n    private JTextArea dozTerminplanW2D3Output;\r\n    private JTextArea dozTerminplanW2D4Output;\r\n    private JTextArea dozTerminplanW2D5Output;\r\n    private JTextArea dozTerminplanW2D6Output;\r\n    private JTextArea dozTerminplanW3D1Output;\r\n    private JTextArea dozTerminplanW3D2Output;\r\n    private JTextArea dozTerminplanW3D3Output;\r\n    private JTextArea dozTerminplanW3D4Output;\r\n    private JTextArea dozTerminplanW3D5Output;\r\n    private JTextArea dozTerminplanW3D6Output;\r\n    private JTextArea dozTerminplanW4D1Output;\r\n    private JTextArea dozTerminplanW4D2Output;\r\n    private JTextArea dozTerminplanW4D3Output;\r\n    private JTextArea dozTerminplanW4D4Output;\r\n    private JTextArea dozTerminplanW4D5Output;\r\n    private JTextArea dozTerminplanW4D6Output;\r\n    private JTextArea dozTerminplanW5D1Output;\r\n    private JTextArea dozTerminplanW5D2Output;\r\n    private JTextArea dozTerminplanW5D3Output;\r\n    private JTextArea dozTerminplanW5D4Output;\r\n    private JTextArea dozTerminplanW5D5Output;\r\n    private JTextArea dozTerminplanW5D6Output;\r\n    private JTextArea dozTerminplanW6D1Output;\r\n    private JTextArea dozTerminplanW6D2Output;\r\n    private JTextArea dozTerminplanW6D3Output;\r\n    private JTextArea dozTerminplanW6D4Output;\r\n    private JTextArea dozTerminplanW6D5Output;\r\n    private JTextArea dozTerminplanW6D6Output;\r\n    private JTextArea dozTerminplanW7D1Output;\r\n    private JTextArea dozTerminplanW7D2Output;\r\n    private JTextArea dozTerminplanW7D3Output;\r\n    private JTextArea dozTerminplanW7D4Output;\r\n    private JTextArea dozTerminplanW7D5Output;\r\n    private JTextArea dozTerminplanW7D6Output;\r\n    private JTextArea dozTerminplanW8D1Output;\r\n    private JTextArea dozTerminplanW8D2Output;\r\n    private JTextArea dozTerminplanW8D3Output;\r\n    private JTextArea dozTerminplanW8D4Output;\r\n    private JTextArea dozTerminplanW8D5Output;\r\n    private JTextArea dozTerminplanW8D6Output;\r\n    private JComboBox dozTerminplanDozAuswahlInput;\r\n\r\n    // Startbild Elemente\r\n    private ImageIcon hwr;\r\n    private JLabel hintergrund;\r\n\r\n    public GUI() {\r\n        //Menü erstellen und verbinden\r\n        hauptMenue.add(raumMenue);\r\n        hauptMenue.add(inventarMenue);\r\n        hauptMenue.add(dozentenMenue);\r\n\r\n        raumMenue.add(raumHinzufuegen);\r\n        raumMenue.add(raumSuchenUndBuchen);\r\n        raumMenue.add(raumBearbeiten);\r\n\r\n        inventarMenue.add(inventur);\r\n        inventarMenue.add(inventarBearbeiten);\r\n\r\n        dozentenMenue.add(dozentTerminplan);\r\n        dozentenMenue.add(dozentHinzufuegen);\r\n        dozentenMenue.add(dozentLoeschen);\r\n\r\n        //Fenster erstellen\r\n        this.setExtendedState(JFrame.MAXIMIZED_BOTH);\r\n        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        this.setMinimumSize(new Dimension(500, 500));\r\n        this.setSize(500,500);\r\n        this.setLayout(new FlowLayout());\r\n\r\n        //Seiten Konfiguration\r\n        hauptMenue.setVisible(true);\r\n        this.setJMenuBar(hauptMenue);\r\n        this.setContentPane(panelMain);\r\n        this.setVisible(true);\r\n        verbergeAllePanels();\r\n        panelStartseite.setVisible(true);\r\n        //hintergrund.setVisible(true);\r\n\r\n\r\n        //Es folgen die Action Listener, beim Aufruf / Wechsel von Seiten\r\n        raumHinzufuegen.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelRaumHinzufuegen.setVisible(true);\r\n                raumHinzufuegenHausInput.removeAllItems();\r\n\r\n                for(Haus h : ServiceLocator.getInstance().getHausliste().getAlleHaeuser()){\r\n                    raumHinzufuegenHausInput.addItem(h.getHausnummer());\r\n                }\r\n            }\r\n        });\r\n\r\n        raumSuchenUndBuchen.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelRaumSuchenBuchen.setVisible(true);\r\n            }\r\n        });\r\n\r\n        raumBearbeiten.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelScrollRaumbearbeiten.setVisible(true);\r\n                panelRaumBearbeiten.setVisible(true);\r\n                //raumbearbeitenBestaetigung.setText(ServiceLocator.getInstance().getHausliste().toString());\r\n                raumbearbeitenRaumlisteInput.removeAllItems();\r\n                //raumbearbeitenBestaetigung.setText(ServiceLocator.getInstance().getHausliste().getAlleRaeueme().size()+\"\");\r\n\r\n                for (Raum r : ServiceLocator.getInstance().getHausliste().getAlleRaeueme()) {\r\n                    raumbearbeitenRaumlisteInput.addItem(r.getRaumnummer());\r\n\r\n                //    System.out.println(r.getRaumnummer());\r\n                }\r\n            }\r\n        });\r\n\r\n        inventur.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelInventur.setVisible(true);\r\n                inventurBestaetigung.setText(ServiceLocator.getInstance().getHausliste().inventur());\r\n            }\r\n        });\r\n\r\n        inventarBearbeiten.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelInventarBearbeiten.setVisible(true);\r\n            }\r\n        });\r\n\r\n        dozentLoeschen.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelDozentLoeschen.setVisible(true);\r\n                dozentLoeschenDozListe.removeAllItems();\r\n                for(Dozent d: ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()){\r\n                    dozentLoeschenDozListe.addItem(d.getName());\r\n                }\r\n            }\r\n        });\r\n\r\n        dozentTerminplan.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelDozentenTerminplan.setVisible(true);\r\n                dozTerminplanDozAuswahlInput.removeAllItems();\r\n                for(Dozent d : ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()){\r\n                    dozTerminplanDozAuswahlInput.addItem(d.getName());\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        dozentHinzufuegen.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                verbergeAllePanels();\r\n                panelDozentHinzufuegen.setVisible(true);\r\n\r\n            }\r\n        });\r\n\r\n        //Es folgen Action Listener, die bei Buttons ausgeführt werden\r\n        raumsucheSuchen.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Felder leeren von vorherigen Durchläufen\r\n                raumsuchenbuchenBestaetigung.setText(\"\");\r\n                buchenRaumnummerSelectInput.removeAllItems();\r\n                buchenDozentSelectInput.removeAllItems();\r\n\r\n                //Wenn ein Kalendar-Feld leer geblieben ist, Fehlermeldung und Methode nicht ausführen\r\n                if (raumsucheStartzeitInput.getText().equals(\"\") || raumsucheEndzeitInput.getText().equals(\"\")){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte füllen Sie die Zeit-Felder aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Zeit-Daten umwandeln\r\n                SimpleDateFormat format = new SimpleDateFormat(\"dd.MM.yyyy HH:mm\");\r\n                Calendar start = Calendar.getInstance();\r\n                Calendar ende = Calendar.getInstance();\r\n                try {\r\n                    start.setTime(format.parse(raumsucheStartzeitInput.getText()));\r\n\r\n                } catch (ParseException ex) {\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte geben Sie die Startzeit in dem angegebene Format an!\");\r\n                    return;\r\n                }\r\n                try {\r\n                    ende.setTime(format.parse(raumsucheEndzeitInput.getText()));\r\n                } catch (ParseException ex) {\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte geben Sie die Endzeit in dem angegebene Format an!\");\r\n                    return;\r\n                }\r\n\r\n                //Start muss vor Ende liegen\r\n                if(start.after(ende)){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Die Startzeit muss vor der Endzeit liegen. Bitte überprüfen Sie Ihre Eingaben!\");\r\n                    return;\r\n                }\r\n\r\n                //Ausstattungs-Daten auslesen, wenn kein Wert eingeben wurde: Anzahl = 0\r\n                int minKameras = (raumsucheKamerasInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheKamerasInput.getText());\r\n                int minBeamer = (raumsucheBeamerInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheBeamerInput.getText());\r\n                int minLautsprecher =  (raumsucheLautsprecherInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheLautsprecherInput.getText());\r\n                int minMikrofone =  (raumsucheMikrofoneInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheMikrofoneInput.getText());\r\n                int minPCs = (raumsuchePCInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsuchePCInput.getText());\r\n                int minTische =  (raumsucheTischeInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheTischeInput.getText());\r\n                int minStuehle =  (raumsucheStuehleInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheStuehleInput.getText());\r\n                int minSmartboards =  (raumsucheSmartboardInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheSmartboardInput.getText());\r\n                int minWhiteboards =  (raumsucheWhiteboardsInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheWhiteboardsInput.getText());\r\n                int minKreidetafeln =  (raumsucheKreidetafelnInput.getText().equals(\"\")) ? 0 : Integer.valueOf(raumsucheKreidetafelnInput.getText());\r\n\r\n                //Filter nach Zeit\r\n                ArrayList<Raum> freieRaueme = ServiceLocator.getInstance().getHausliste().filtereRaeuemeVerfuegbar(start,ende);\r\n\r\n                //Filter nach Ausstattung\r\n                ArrayList<Raum> perfekteRaueme = ServiceLocator.getInstance().getHausliste().filtereRaeuemeAusstattung(freieRaueme,minBeamer,minKameras,minKreidetafeln,minLautsprecher,minMikrofone,minPCs,minSmartboards,minStuehle,minTische,minWhiteboards);\r\n\r\n                if (perfekteRaueme.size() == 0){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Es gibt keine passenden Räume, bitte verändern Sie Ihre Suchkriterien!\");\r\n                }\r\n\r\n                else {\r\n                    //Gefundene Räume in den DropDownMenus zum Buchen anzeigen\r\n                    for (Raum r : perfekteRaueme) {\r\n                        buchenRaumnummerSelectInput.addItem(r.getRaumnummer());\r\n                    }\r\n                    //Dozenten Auswahl\r\n                    for (Dozent d : ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()){\r\n                        buchenDozentSelectInput.addItem(d.getName());\r\n                    }\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte wählen Sie einen Raum und einen Dozenten aus!\");\r\n\r\n                }\r\n            }\r\n        });\r\n        raumHinzufuegenButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Wenn ein Feld leer geblieben ist, Fehlermeldung und Methode nicht ausführen\r\n                if (raumHinzufuegenNummerInput.getText().equals(\"\") || raumHinzufuegenHausInput.getSelectedItem() == null){\r\n                    raumHinzufuegenBestaetigung.setText(\"Bitte füllen Sie beide Felder aus!\");\r\n                    return;\r\n                }\r\n\r\n                int raumID = Integer.valueOf(raumHinzufuegenNummerInput.getText());\r\n                String hausID = raumHinzufuegenHausInput.getSelectedItem().toString();\r\n                //Prüfe, ob ID bereits vergeben ist\r\n                if(ServiceLocator.getInstance().getHausliste().raumnummerKollidiert(raumID)){\r\n                    raumHinzufuegenBestaetigung.setText(\"Die Raumnummer ist bereits vergeben, bitte wählen Sie eine andere!\");\r\n                    return;\r\n                }\r\n\r\n                //wenn keine Kollision: Im entsprechenden Haus addRaum\r\n                else {\r\n                    for (Haus h : ServiceLocator.getInstance().getHausliste().getAlleHaeuser()) {\r\n                        if (h.getHausnummer() == hausID) {\r\n                            h.addRaum(new Raum(raumID));\r\n                            raumHinzufuegenBestaetigung.setText(\"Neuer Raum angelegt: Haus \" + hausID + \" Raum: \" + raumID);\r\n                            return;\r\n                        }\r\n                    }\r\n                    raumHinzufuegenBestaetigung.setText(\"Unerwarteter Fehler: Haus existiert nicht. Bitte wiederholen Sie den Vorgang!\");\r\n                }\r\n            }\r\n        });\r\n        raumbearbeitenIDAendernCheck.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Wenn kein Raum ausgewählt wurde\r\n                if (raumbearbeitenRaumlisteInput.getSelectedItem() == null){\r\n                    raumbearbeitenBestaetigung.setText(\"Bitte wählen Sie einen Raum aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Wenn neue ID nicht angegeben wurde, Fehlermeldung und Methode nicht ausführen\r\n                if (raumbearbeitenRaumIDNeuInput.getText().equals(\"\")){\r\n                    raumbearbeitenBestaetigung.setText(\"Bitte geben Sie eine neue Raumnummer an!\");\r\n                    return;\r\n                }\r\n\r\n                //Neue ID einlesen, wenn falsches Format Abbruch\r\n                int neueID;\r\n                try {\r\n                    neueID = Integer.parseInt(raumbearbeitenRaumIDNeuInput.getText());\r\n                }\r\n                catch (NumberFormatException ex){\r\n                    raumbearbeitenBestaetigung.setText(\"Bitte geben Sie eine Zahl ein!\");\r\n                    return;\r\n                }\r\n\r\n                //Alte ID aus DropDown Menu extrahieren\r\n                int alteID = Integer.valueOf(raumbearbeitenRaumlisteInput.getSelectedItem().toString());\r\n\r\n                //Wenn die neueID noch nicht vergeben ist:\r\n                if(!(ServiceLocator.getInstance().getHausliste().raumnummerKollidiert(neueID))){\r\n                    for (Raum r : ServiceLocator.getInstance().getHausliste().getAlleRaeueme()) {\r\n                        if (r.getRaumnummer() == alteID){\r\n                            r.setRaumnummer(neueID);\r\n                            raumbearbeitenBestaetigung.setText(\"Raumnummer erfolgreich geändert.\");\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                //Es gab eine ID-Kollision, also ist die Raumnummer bereits vergeben\r\n                else {\r\n                    raumbearbeitenBestaetigung.setText(\"Neue Raumnummer ist bereits vergeben. Bitte überprüfen Sie ihre Eingaben!\");\r\n                }\r\n            }\r\n\r\n        });\r\n        buchenCheck.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Kontrolle, ob Raum und Dozent ausgewählt wurden\r\n                if(buchenDozentSelectInput.getSelectedItem() == null || buchenRaumnummerSelectInput.getSelectedItem() == null){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte füllen Sie beide Felder aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Erneutes Einlesen der Zeiten, falls diese in der Zwischenzeit verändert wurden:\r\n                //Wenn ein Kalendar-Feld leer geblieben ist, Fehlermeldung und Methode nicht ausführen\r\n                if (raumsucheStartzeitInput.getText().equals(\"\") || raumsucheEndzeitInput.getText().equals(\"\")){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte füllen Sie die Zeit-Felder aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Zeit-Daten umwandeln\r\n                SimpleDateFormat format = new SimpleDateFormat(\"dd.MM.yyyy HH:mm\");\r\n                Calendar start = Calendar.getInstance();\r\n                Calendar ende = Calendar.getInstance();\r\n                try {\r\n                    start.setTime(format.parse(raumsucheStartzeitInput.getText()));\r\n\r\n                } catch (ParseException ex) {\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte geben Sie die Startzeit in dem angegebene Format an!\");\r\n                    return;\r\n                }\r\n                try {\r\n                    ende.setTime(format.parse(raumsucheEndzeitInput.getText()));\r\n                } catch (ParseException ex) {\r\n                    raumsuchenbuchenBestaetigung.setText(\"Bitte geben Sie die Endzeit in dem angegebene Format an!\");\r\n                    return;\r\n                }\r\n\r\n                //Start muss vor Ende liegen\r\n                if(start.after(ende)){\r\n                    raumsuchenbuchenBestaetigung.setText(\"Die Startzeit muss vor der Endzeit liegen. Bitte überprüfen Sie Ihre Eingaben!\");\r\n                    return;\r\n                }\r\n\r\n                int raumID = Integer.valueOf(buchenRaumnummerSelectInput.getSelectedItem().toString());\r\n                String dozent = buchenDozentSelectInput.getSelectedItem().toString();\r\n\r\n                for(Raum r : ServiceLocator.getInstance().getHausliste().getAlleRaeueme()){\r\n                    if (r.getRaumnummer() == raumID){\r\n                        //Erneuter Kollisions Check, falls Datum verändert wurde. Wenn nun kollidiert, Abbruch und Warnung\r\n                        if (ServiceLocator.getInstance().getHausliste().terminKollidiert(r,start,ende)){\r\n                            raumsuchenbuchenBestaetigung.setText(\"Sie haben die Buchungsdaten verändert. Zu der angegebenen Zeit ist der gewünschte Raum nicht verfügbar. Bitte aktualisieren Sie die Raumauswahl durch klicken auf 'Räume finden'!\");\r\n                            return;\r\n                        }\r\n                        for(Dozent d : ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()){\r\n                            if (d.getName().equals(dozent)){\r\n                                r.buchen(start,ende,d);\r\n                                raumsuchenbuchenBestaetigung.setText(\"Erfolgreich gebucht. BuchungsID: \" + (r.getBuchungen().get(r.getBuchungen().size()-1).getId()));\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n                    raumsuchenbuchenBestaetigung.setText(\"Unerwarteter Fehler, bitte wiederholen Sie den Buchungsvorgang\");\r\n                }\r\n\r\n            }\r\n        });\r\n        raumbearbeitenHinzufuegenArtInput.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                raumbearbeitenHinzufuegenTypInput.removeAllItems();\r\n                switch (raumbearbeitenHinzufuegenArtInput.getSelectedItem().toString()) {\r\n                    case \"Beamer\" -> {\r\n                        for (BeamerTyp typ : ServiceLocator.getInstance().getBeamerTypen().getAlleBeamerTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Kamera\" -> {\r\n                        for (KameraTyp typ : ServiceLocator.getInstance().getKameraTypen().getAlleKameraTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Kreidetafel\" -> {\r\n                        for (KreidetafelTyp typ : ServiceLocator.getInstance().getKreideTypen().getAlleKreidetafelTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Lautsprecher\" -> {\r\n                        for (LautsprecherTyp typ : ServiceLocator.getInstance().getLautsprecherTypen().getAlleLautsprecherTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Mikrofon\" -> {\r\n                        for (MikrofonTyp typ : ServiceLocator.getInstance().getMikrofonTypen().getAlleMikrofonTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"PC\" -> {\r\n                        for (PCTyp typ : ServiceLocator.getInstance().getPCTypen().getAllePCTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Smartboard\" -> {\r\n                        for (SmartboardTyp typ : ServiceLocator.getInstance().getSmartboardTypen().getAlleSmartboardTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Stuhl\" -> {\r\n                        for (StuhlTyp typ : ServiceLocator.getInstance().getStuhlTypen().getAlleStuhlTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Tisch\" -> {\r\n                        for (TischTyp typ : ServiceLocator.getInstance().getTischTypen().getAlleTischTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    case \"Whiteboard\" -> {\r\n                        for (WhiteboardTyp typ : ServiceLocator.getInstance().getWhiteboardTypen().getAlleWhiteboardTypen()) {\r\n                            raumbearbeitenHinzufuegenTypInput.addItem(typ.getModell());\r\n                        }\r\n                    }\r\n\r\n                    default -> System.out.println(\"Kp why, aber den Typ geht es nicht.\");\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        raumbearbeitenHinzufuegenCheck.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Wenn kein Typ gewählt wurde, kann nur beim Starten passieren\r\n                if(raumbearbeitenHinzufuegenTypInput.getSelectedItem() == null || raumbearbeitenHinzufuegenArtInput.getSelectedItem() == null){\r\n                    raumbearbeitenBestaetigung.setText(\"Bitte wählen Sie Art und Typ aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Es muss vorher ein Raum gewählt worden sein\r\n                if (raumbearbeitenRaumlisteInput.getSelectedItem() == null){\r\n                    raumbearbeitenBestaetigung.setText(\"Bitte wählen Sie zuerst einen Raum aus!\");\r\n                    return;\r\n                }\r\n\r\n                //Initialisierung\r\n                int raumID = Integer.valueOf(raumbearbeitenRaumlisteInput.getSelectedItem().toString());\r\n                String typ = raumbearbeitenHinzufuegenTypInput.getSelectedItem().toString();\r\n                String art = raumbearbeitenHinzufuegenArtInput.getSelectedItem().toString();\r\n\r\n                //Im entsprechenden Raum\r\n                for (Raum r : ServiceLocator.getInstance().getHausliste().getAlleRaeueme()) {\r\n                    if (r.getRaumnummer() == raumID){\r\n                        boolean erfolgreich = true;\r\n                    //Entsprechend der Art, dann entsprechend des Typen\r\n                        switch (art) {\r\n                            case \"Beamer\" -> r.addAusstattung(new Beamer((BeamerTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Kamera\" -> r.addAusstattung(new Kamera((KameraTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Kreidetafel\" -> r.addAusstattung(new Kreidetafel((KreidetafelTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Lautsprecher\" -> r.addAusstattung(new Lautsprecher((LautsprecherTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Mikrofon\" -> r.addAusstattung(new Mikrofon((MikrofonTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"PC\" -> r.addAusstattung(new PC((PCTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Smartboard\" -> r.addAusstattung(new Smartboard((SmartboardTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Stuhl\" -> r.addAusstattung(new Stuhl((StuhlTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Tisch\" -> r.addAusstattung(new Tisch((TischTyp) getTyp(typ), Calendar.getInstance()));\r\n                            case \"Whiteboard\" -> r.addAusstattung(new Whiteboard((WhiteboardTyp) getTyp(typ), Calendar.getInstance()));\r\n                            default -> erfolgreich = false;\r\n                        }\r\n\r\n                        if(erfolgreich){\r\n                            raumbearbeitenBestaetigung.setText(\"Ausstattung erfolgreich hinzugefügt.\\nAktueller Raumzustand: \"+r.toString());\r\n                            return;\r\n                        }\r\n                        else{\r\n                            raumbearbeitenBestaetigung.setText(\"Unerwarteter Fehler: Der Typ exisitert nicht. Wenden Sie sich bitte an den Systemadmin!\");\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                raumbearbeitenBestaetigung.setText(\"Unerwarteter Fehler: Raum nicht gefunden.\");\r\n                return;\r\n\r\n\r\n            }\r\n        });\r\n        raumbearbeitenRaumlisteInput.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //Aktuelle Ausstattung dem Zustands-DropDown Menu hinzufügen\r\n                raumbearbeitenVeraendernAusstattungInput.removeAllItems();\r\n\r\n                if (raumbearbeitenRaumlisteInput.getSelectedItem() != null){\r\n                    int raumID = Integer.valueOf(raumbearbeitenRaumlisteInput.getSelectedItem().toString());\r\n\r\n                    for (Raum r : ServiceLocator.getInstance().getHausliste().getAlleRaeueme()) {\r\n                        if(r.getRaumnummer() == raumID){\r\n                            for (Ausstattungsmerkmal a : r.getAusstattung()) {\r\n                                //DateFormat df = new SimpleDateFormat(\"dd.MM.yyyy HH:mm\");\r\n                                //raumbearbeitenVeraendernAusstattungInput.addItem(a.getId() +\"\\t\"+ df.format(a.getAnschaffungsdatum().getTime()));\r\n                                raumbearbeitenVeraendernAusstattungInput.addItem(a.getId());\r\n                                //a.getClass().\r\n                                //TODO @Lukas Modell anzeigen lassen\r\n\r\n\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n        raumbearbeitenVeraendernCheck.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                int ID = Integer.valueOf(raumbearbeitenVeraendernAusstattungInput.getSelectedItem().toString());\r\n\r\n                String neuerStatus = raumbearbeitenVeraendernZustandInput.getSelectedItem().toString();\r\n\r\n                for (Ausstattungsmerkmal a : ServiceLocator.getInstance().getHausliste().getAlleAusstattungen()) {\r\n                    if(a.getId() == ID){\r\n                        raumbearbeitenBestaetigung.setText(\"Ausstattung gefunden!\");\r\n                        if (neuerStatus.equals(\"Defekt\")){\r\n                            a.gehtKaputt();\r\n                            raumbearbeitenBestaetigung.setText(\"Ausstattung \" + ID + \" wurde erfolgreich als defekt eingestuft.\");\r\n                        } else if (neuerStatus.equals(\"Funktionstüchtig\")) {\r\n                            a.wirdRepariert();\r\n                            raumbearbeitenBestaetigung.setText(\"Ausstattung \" + ID + \" wurde erfolgreich als funktionstüchtig eingestuft.\");\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n        dozentLoeschenCheck.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String dozName = dozentLoeschenDozListe.getSelectedItem().toString();\r\n\r\n                for (Dozent d : ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()) {\r\n                    if(d.getName().equals(dozName)){\r\n                        ServiceLocator.getInstance().getDozentenListe().getAlleDozenten().remove(d);\r\n                        dozentLoeschenBestaetigung.setText(\"Der Dozent \" + dozName + \" wurde erfolgreich entfernt.\");\r\n                        return;\r\n                    }\r\n\r\n                }\r\n                dozentLoeschenBestaetigung.setText(\"Unerwarteter Fehler: Dozent existiert nicht. Bitte wiederholen Sie den Vorgang!\");\r\n            }\r\n        });\r\n        dozentHinzufuegenButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                String neuerDozent = dozentHinzufuegenInput.toString();\r\n\r\n                for(Dozent d : ServiceLocator.getInstance().getDozentenListe().getAlleDozenten()){\r\n                    if (d.getName().equals(neuerDozent)){\r\n                        dozentHinzufuegenBestaetigung.setText(\"Dozent existiert bereits. Bitte wählen Sie einen anderen Namen aus!\");\r\n                        return;\r\n                    }\r\n                }\r\n                ServiceLocator.getInstance().getDozentenListe().addDozent(new Dozent(neuerDozent));\r\n                dozentHinzufuegenBestaetigung.setText(\"Dozent erfolgreich hinzugefügt.\");\r\n\r\n\r\n            }\r\n        });\r\n        dozTerminplanDozAuswahlInput.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //TODO @Moritz\r\n                /*\r\n                wenn die ComboBox ausgewählt wird, muss sich die Tabelle initialisieren\r\n                 */\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Methode ermittelt den Typ, basierend auf einem String der dem Typennamen entspricht\r\n     *\r\n     * @author ZanderLK\r\n     * @version 1.0.1\r\n     * @since 20220802\r\n     *\r\n     * @param typName\r\n     * @return typ\r\n     */\r\n    public AusstattungsTypIF getTyp(String typName){\r\n        for (BeamerTyp typ : ServiceLocator.getInstance().getBeamerTypen().getAlleBeamerTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (KreidetafelTyp typ : ServiceLocator.getInstance().getKreideTypen().getAlleKreidetafelTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (SmartboardTyp typ : ServiceLocator.getInstance().getSmartboardTypen().getAlleSmartboardTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (TischTyp typ : ServiceLocator.getInstance().getTischTypen().getAlleTischTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (WhiteboardTyp typ : ServiceLocator.getInstance().getWhiteboardTypen().getAlleWhiteboardTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (StuhlTyp typ : ServiceLocator.getInstance().getStuhlTypen().getAlleStuhlTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (KameraTyp typ : ServiceLocator.getInstance().getKameraTypen().getAlleKameraTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (PCTyp typ : ServiceLocator.getInstance().getPCTypen().getAllePCTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for (MikrofonTyp typ : ServiceLocator.getInstance().getMikrofonTypen().getAlleMikrofonTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        for ( LautsprecherTyp typ : ServiceLocator.getInstance().getLautsprecherTypen().getAlleLautsprecherTypen()) {\r\n            if(typ.getModell().equals(typName)){\r\n                return (AusstattungsTypIF) typ;\r\n            }\r\n\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Verbirgt alle Panels, die nicht dauerhaft notwendig sind\r\n     *\r\n     * @author ZanderLK\r\n     * @version 1.1.3\r\n     * @since 20220725\r\n     */\r\n    public void verbergeAllePanels(){\r\n    panelRaumHinzufuegen.setVisible(false);\r\n    panelRaumSuchenBuchen.setVisible(false);\r\n    panelInventur.setVisible(false);\r\n    panelInventarBearbeiten.setVisible(false);\r\n    panelDozentLoeschen.setVisible(false);\r\n    panelDozentenTerminplan.setVisible(false);\r\n    panelStartseite.setVisible(false);\r\n    panelRaumBearbeiten.setVisible(false);\r\n    panelDozentHinzufuegen.setVisible(false);\r\n    panelScrollRaumbearbeiten.setVisible(false);\r\n    }\r\n\r\n    private void createUIComponents() {\r\n        //place custom component creation code here\r\n    }\r\n}\r\n//TODO
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GUI.java b/src/GUI.java
--- a/src/GUI.java	(revision 0759a7785680ef66fd75ec9d68d0c5e3d71112dd)
+++ b/src/GUI.java	(date 1659628772403)
@@ -688,9 +688,6 @@
                     }
                 }
 
-
-
-
             }
         });
         raumbearbeitenVeraendernCheck.addActionListener(new ActionListener() {
@@ -868,5 +865,4 @@
     private void createUIComponents() {
         //place custom component creation code here
     }
-}
-//TODO
\ No newline at end of file
+}
\ No newline at end of file
Index: src/datenspeicherung/DatenInitialisierung.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package datenspeicherung;\r\n\r\nimport datenspeicherung.*;\r\nimport serviceLocator.*;\r\nimport verwaltung.*;\r\nimport ausstattung.*;\r\nimport buchung.*;\r\nimport zustand.*;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\n\r\npublic class DatenInitialisierung {\r\n\r\n    public static void main(String[] args) {\r\n        //Häuser definieren\r\n        ServiceLocator.getInstance().getHausliste().addHaus(new Haus(\"6a\",false));\r\n        ServiceLocator.getInstance().getHausliste().addHaus(new Haus(\"6b\",true));\r\n        ServiceLocator.getInstance().getHausliste().addHaus(new Haus(\"6c\",true));\r\n\r\n        //Räume in 6a\r\n        for (int i : new int[]{101, 102, 103, 104, 105, 201, 202, 203, 204, 205, 301, 302, 303, 304, 305}) {\r\n            ServiceLocator.getInstance().getHausliste().getAlleHaeuser().get(0).addRaum(new Raum(i));\r\n        }\r\n\r\n        //Räume in 6b\r\n        for (int i : new int[]{106, 107, 108, 109, 110, 206, 207, 208, 209, 210, 306, 307, 308, 309, 310}) {\r\n            ServiceLocator.getInstance().getHausliste().getAlleHaeuser().get(1).addRaum(new Raum(i));\r\n        }\r\n\r\n        //Räume in 6c\r\n        for (int i : new int[]{111, 112, 113, 114, 115, 211, 212, 213, 214, 215, 311, 312, 313, 314, 315}) {\r\n            ServiceLocator.getInstance().getHausliste().getAlleHaeuser().get(2).addRaum(new Raum(i));\r\n        }\r\n\r\n        //Dozenten\r\n        for (String s : Arrays.asList(\"Faustmann\", \"Drebing\", \"Becker\", \"Maeß\", \"Lemke\", \"Saucken\", \"Magalashvili\", \"Gatzer\", \"Ringhand\", \"Schlösser\", \"Kocmann\", \"Eisenbart\", \"Erkens\")) {\r\n            ServiceLocator.getInstance().getDozentenListe().addDozent(new Dozent(s));\r\n        }\r\n\r\n        //Beamertypen\r\n        ServiceLocator.getInstance().getBeamerTypen().addBeamerTyp(new BeamerTyp(\"T26\", \"TOPVISION\", 9500, true));\r\n        ServiceLocator.getInstance().getBeamerTypen().addBeamerTyp(new BeamerTyp(\"P5530\", \"ACER\", 7000, false));\r\n        ServiceLocator.getInstance().getBeamerTypen().addBeamerTyp(new BeamerTyp(\"X100-4k\", \"ViewSonic\", 2500, true));\r\n\r\n        //Kreidetafeltypen\r\n        ServiceLocator.getInstance().getKreideTypen().addKreidetafelTyp(new KreidetafelTyp(\"Kreide250\",true, false, 250, 180));\r\n        ServiceLocator.getInstance().getKreideTypen().addKreidetafelTyp(new KreidetafelTyp(\"Kreide220\", false, true, 220, 160));\r\n        ServiceLocator.getInstance().getKreideTypen().addKreidetafelTyp(new KreidetafelTyp(\"Kreide200\", false, true, 200, 140));\r\n\r\n\r\n        //Smartboardtypen\r\n        ServiceLocator.getInstance().getSmartboardTypen().addSmartboardTyp(new SmartboardTyp(\"MX255 PRO\", \"SMARTBOARD\", 3000));\r\n        ServiceLocator.getInstance().getSmartboardTypen().addSmartboardTyp(new SmartboardTyp(\"Lite PRO\", \"iiyama\", 1500));\r\n\r\n        //Whiteboardtypen\r\n        ServiceLocator.getInstance().getWhiteboardTypen().addWhiteboardTyp(new WhiteboardTyp(\"WhiteSuper\",false, true, 60 , 100));\r\n        ServiceLocator.getInstance().getWhiteboardTypen().addWhiteboardTyp(new WhiteboardTyp(\"WhitePro\",true, false, 180 , 120));\r\n        ServiceLocator.getInstance().getWhiteboardTypen().addWhiteboardTyp(new WhiteboardTyp(\"WhiteBasic\",false, true, 180 , 120));\r\n\r\n        //Tischtypen\r\n        ServiceLocator.getInstance().getTischTypen().addTischTyp(new TischTyp(\"BasicTisch\", 1,false, false, 80, 60));\r\n        ServiceLocator.getInstance().getTischTypen().addTischTyp(new TischTyp(\"Doppeltisch\",2, false, false, 160, 60));\r\n        ServiceLocator.getInstance().getTischTypen().addTischTyp(new TischTyp(\"PCGroß\", 2, true, false, 180, 70));\r\n        ServiceLocator.getInstance().getTischTypen().addTischTyp(new TischTyp(\"PCUltraKomfort\",1, true, true, 160, 80));\r\n\r\n        //Stuhltyp\r\n        ServiceLocator.getInstance().getStuhlTypen().addStuhlTyp(new StuhlTyp(\"Dynamic\", true));\r\n        ServiceLocator.getInstance().getStuhlTypen().addStuhlTyp(new StuhlTyp(\"Static\",false));\r\n\r\n        //KameraTypen //Pixel in mega angegeben, Brennweite in mm\r\n        ServiceLocator.getInstance().getKameraTypen().addKameraTyp(new KameraTyp(\"Streamcam\", \"Logitech\", 16, 50, false));\r\n        ServiceLocator.getInstance().getKameraTypen().addKameraTyp(new KameraTyp(\"Full HD Webcam\", \"csl\", 4, 100, true));\r\n\r\n        //PcTyp Taktfrequenz in GHz\r\n        ServiceLocator.getInstance().getPCTypen().addPCTyp(new PCTyp(\"UltraWin\",\"Windows\", 4.4, true, (short)16));\r\n        ServiceLocator.getInstance().getPCTypen().addPCTyp(new PCTyp(\"Linux15\",\"Linux\", 2.2, false, (short)4));\r\n        ServiceLocator.getInstance().getPCTypen().addPCTyp(new PCTyp(\"Mac4\",\"IOS\", 3.2, false, (short) 8));\r\n\r\n\r\n        //MikrofonTyp         //Empfindlichkeit in max db\r\n        ServiceLocator.getInstance().getMikrofonTypen().addMikrofonTyp(new MikrofonTyp(\"Rhode\", \"NT-USB\", true, 80));\r\n        ServiceLocator.getInstance().getMikrofonTypen().addMikrofonTyp(new MikrofonTyp(\"Tonor\", \"Q9\", false, 50));\r\n\r\n        //LautsprecherTyp\r\n        ServiceLocator.getInstance().getLautsprecherTypen().addLautsprecherTyp(new LautsprecherTyp(\"Master200\",\"Logitech\",4,300,true));\r\n        ServiceLocator.getInstance().getLautsprecherTypen().addLautsprecherTyp(new LautsprecherTyp(\"Basic100\", \"Logitech\", 2,100,false));\r\n\r\n        //Beamer anlegen\r\n        for (int j = 0; j < 5; j++) {\r\n            for (int i = 0; i < 3; i++) {\r\n                ServiceLocator.getInstance().getHausliste().getAlleRaeueme().get(j).addAusstattung(new Beamer(ServiceLocator.getInstance().getBeamerTypen().getAlleBeamerTypen().get(i), Calendar.getInstance()));\r\n            }\r\n        }\r\n\r\n        //PCs anlegen\r\n        for (int j = 0; j < 5; j++) {\r\n            for (int i = 0; i < 3; i++) {\r\n                ServiceLocator.getInstance().getHausliste().getAlleRaeueme().get(j).addAusstattung(new PC(ServiceLocator.getInstance().getPCTypen().getAllePCTypen().get(i), Calendar.getInstance()));\r\n            }\r\n\r\n        ///\r\n        }\r\n\r\n\r\n        //speichern\r\n        ServiceLocator.getInstance().getPersistenz().speichern(\"Grunddaten\",ServiceLocator.getInstance());\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/datenspeicherung/DatenInitialisierung.java b/src/datenspeicherung/DatenInitialisierung.java
--- a/src/datenspeicherung/DatenInitialisierung.java	(revision 0759a7785680ef66fd75ec9d68d0c5e3d71112dd)
+++ b/src/datenspeicherung/DatenInitialisierung.java	(date 1659626946184)
@@ -14,9 +14,13 @@
 
     public static void main(String[] args) {
         //Häuser definieren
-        ServiceLocator.getInstance().getHausliste().addHaus(new Haus("6a",false));
-        ServiceLocator.getInstance().getHausliste().addHaus(new Haus("6b",true));
-        ServiceLocator.getInstance().getHausliste().addHaus(new Haus("6c",true));
+        for (String s1 : Arrays.asList("6a", "6b", "6c", "5", "7b")) {
+            ServiceLocator.getInstance().getHausliste().addHaus(new Haus(s1,true));
+        }
+
+        for (String s1 : Arrays.asList("1", "2")) {
+            ServiceLocator.getInstance().getHausliste().addHaus(new Haus(s1,false));
+        }
 
         //Räume in 6a
         for (int i : new int[]{101, 102, 103, 104, 105, 201, 202, 203, 204, 205, 301, 302, 303, 304, 305}) {
@@ -99,7 +103,7 @@
                 ServiceLocator.getInstance().getHausliste().getAlleRaeueme().get(j).addAusstattung(new PC(ServiceLocator.getInstance().getPCTypen().getAllePCTypen().get(i), Calendar.getInstance()));
             }
 
-        ///
+        //
         }
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ff3f2e23-5b3f-4119-a77f-c06b2854abf7\" name=\"Changes\" comment=\"Refactoring von Bezeichnungen\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/GUI.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/GUI.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2BtdFoXaFmdaVXI9KEm1s2wGUCC\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"UI_DESIGNER_EDITOR_MODE.PaletteManager.WIDTH\": \"202\",\r\n    \"UI_DESIGNER_EDITOR_MODE.UIDesignerToolWindowManager.WIDTH\": \"953\",\r\n    \"last_opened_file_path\": \"C:/Users/Lukas Zander/Downloads/Musterlösung ÜB 9\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Lukas Zander\\IdeaProjects\\GebaeudemanagementOOP\\src\\DataImages\" />\r\n      <recent name=\"C:\\Users\\Lukas Zander\\IdeaProjects\\GebaeudemanagementOOP\\src\\GUI\\Moritz\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"GPUMain\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.Moritz.GPUMain\" />\r\n      <module name=\"GebaeudemanagementOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"GUI.Moritz.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"GUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI\" />\r\n      <module name=\"GebaeudemanagementOOP\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"GebaeudemanagementOOP\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"guiTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.guiTest\" />\r\n      <module name=\"GebaeudemanagementOOP\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.GUI\" />\r\n        <item itemvalue=\"Application.GPUMain\" />\r\n        <item itemvalue=\"Application.guiTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ff3f2e23-5b3f-4119-a77f-c06b2854abf7\" name=\"Changes\" comment=\"\" />\r\n      <created>1657729218096</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1657729218096</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"init\">\r\n      <created>1657729327980</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657729327980</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Habe alle Klassen erstellt\">\r\n      <created>1657731227907</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657731227907</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Singleton mit eingebunden\">\r\n      <created>1657731619921</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657731619921</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Hausliste und Raumliste implementiert\">\r\n      <created>1657736452863</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657736452863</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Terminbuchung und Zeitraum implementiert\">\r\n      <created>1657738952474</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657738952474</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Terminplanung und Ausstattungsmerkmal angepasst, Zustände implementiert\">\r\n      <created>1657832391184</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657832391184</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Automatische BuchungsID, Raumliste obsolet gemacht durch Integration der notwendigen Methoden in Haus\">\r\n      <created>1657879843097</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657879843097</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Inventur implementiert\">\r\n      <created>1657886154392</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1657886154392</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"DateFormatter geändert: von &quot;YYYY&quot; zu &quot;yyyy&quot;\">\r\n      <created>1658597103695</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597103695</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"toString() geändert. bessere Darstellung, Anschaffungsdatum an die richtige Stelle\">\r\n      <created>1658597457688</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597457688</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"toString() und print erstellt()\">\r\n      <created>1658597580094</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597580094</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"Großschreibung in der toString() geändert\">\r\n      <created>1658597797384</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597797384</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"Großschreibung in der toString() geändert\">\r\n      <created>1658597902741</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597902741</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Großschreibung in der toString() geändert\">\r\n      <created>1658597983301</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658597983301</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"ToString() und print() erstellt\">\r\n      <created>1658598160825</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658598160825</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"ToString() und print() erstellt.Sourroundsound zu Surroundsound geändert\">\r\n      <created>1658599388419</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658599388419</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"Formatierung von toString()\">\r\n      <created>1658599639020</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658599639020</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"toString() und print() erstellt\">\r\n      <created>1658599715482</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658599715482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"toString() und print() erstellt. Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658599955337</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658599955337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"toString() und print() erstellt. Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658600258543</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658600258543</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"toString() und print() erstellt. Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658600473811</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658600473811</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658600575605</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658600575605</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658600777551</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658600777552</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"toString() und print() erstellt. Anschaffungsdatum hinzugefügt.\">\r\n      <created>1658601031689</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658601031689</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"nichts geändert\">\r\n      <created>1658601326056</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658601326056</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"toString() geändert\">\r\n      <created>1658651503158</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658651503158</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"toString() geändert\">\r\n      <created>1658651628505</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658651628505</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"toString() geändert\">\r\n      <created>1658652206866</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658652206866</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"Bei der Methode addAusstattung() den Modifier zu public umgeändert\">\r\n      <created>1658701842589</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658701842589</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"implements Serializiable und serialVerionUID hinzugefügt\">\r\n      <created>1658780389091</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658780389091</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"Kommentare überarbeitet\">\r\n      <created>1658924924684</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658924924684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"GUI Test\">\r\n      <created>1658928080164</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658928080164</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"GUI importiert\">\r\n      <created>1658941296462</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658941296462</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"Neue GUI implementiert\">\r\n      <created>1658961720905</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658961720905</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"GUI Anpassungen und Namenskonventionen\">\r\n      <created>1658962692411</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1658962692411</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\">\r\n      <created>1659042078096</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659042078096</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\">\r\n      <created>1659432397625</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659432397625</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\">\r\n      <created>1659434999301</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659434999301</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\">\r\n      <created>1659451225863</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659451225863</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\">\r\n      <created>1659451300963</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659451300963</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"Inventur überarbeiet, Doz hinzufügen implementiert\">\r\n      <created>1659623612238</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659623612238</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"Terminplan DozAuswahl, Listener DozAuswahl vorbereitet\">\r\n      <created>1659624140211</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659624140211</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"Refactoring von Bezeichnungen\">\r\n      <created>1659625222338</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1659625222338</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"44\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Inventur implementiert\" />\r\n    <MESSAGE value=\"DateFormatter geändert: von &quot;YYYY&quot; zu &quot;yyyy&quot;\" />\r\n    <MESSAGE value=\"toString() geändert. bessere Darstellung, Anschaffungsdatum an die richtige Stelle\" />\r\n    <MESSAGE value=\"toString() und print erstellt()\" />\r\n    <MESSAGE value=\"Großschreibung in der toString() geändert\" />\r\n    <MESSAGE value=\"ToString() und print() erstellt\" />\r\n    <MESSAGE value=\"ToString() und print() erstellt.Sourroundsound zu Surroundsound geändert\" />\r\n    <MESSAGE value=\"Formatierung von toString()\" />\r\n    <MESSAGE value=\"toString() und print() erstellt\" />\r\n    <MESSAGE value=\"Anschaffungsdatum hinzugefügt.\" />\r\n    <MESSAGE value=\"toString() und print() erstellt. Anschaffungsdatum hinzugefügt.\" />\r\n    <MESSAGE value=\"nichts geändert\" />\r\n    <MESSAGE value=\"toString() geändert\" />\r\n    <MESSAGE value=\"nichts\" />\r\n    <MESSAGE value=\"Bei der Methode addAusstattung() den Modifier zu public umgeändert\" />\r\n    <MESSAGE value=\"implements Serializiable und serialVerionUID hinzugefügt\" />\r\n    <MESSAGE value=\"Kommentare überarbeitet\" />\r\n    <MESSAGE value=\"GUI Test\" />\r\n    <MESSAGE value=\"GUI importiert\" />\r\n    <MESSAGE value=\"Neue GUI implementiert\" />\r\n    <MESSAGE value=\"GUI Anpassungen und Namenskonventionen\" />\r\n    <MESSAGE value=\"GUI Rauminhalte ergänzt, raumidkollision implementiert, exceptionhandling and popup for iostream\" />\r\n    <MESSAGE value=\"Inventur überarbeiet, Doz hinzufügen implementiert\" />\r\n    <MESSAGE value=\"Terminplan DozAuswahl, Listener DozAuswahl vorbereitet\" />\r\n    <MESSAGE value=\"Refactoring von Bezeichnungen\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Refactoring von Bezeichnungen\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0759a7785680ef66fd75ec9d68d0c5e3d71112dd)
+++ b/.idea/workspace.xml	(date 1659627848050)
@@ -4,9 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="ff3f2e23-5b3f-4119-a77f-c06b2854abf7" name="Changes" comment="Refactoring von Bezeichnungen">
+    <list default="true" id="ff3f2e23-5b3f-4119-a77f-c06b2854abf7" name="Changes" comment="Feinheiten GUI">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/GUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/GUI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/datenspeicherung/DatenInitialisierung.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/datenspeicherung/DatenInitialisierung.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -415,7 +416,14 @@
       <option name="project" value="LOCAL" />
       <updated>1659625222338</updated>
     </task>
-    <option name="localTasksCounter" value="44" />
+    <task id="LOCAL-00044" summary="Feinheiten GUI">
+      <created>1659626486591</created>
+      <option name="number" value="00044" />
+      <option name="presentableId" value="LOCAL-00044" />
+      <option name="project" value="LOCAL" />
+      <updated>1659626486591</updated>
+    </task>
+    <option name="localTasksCounter" value="45" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -430,7 +438,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="Inventur implementiert" />
     <MESSAGE value="DateFormatter geändert: von &quot;YYYY&quot; zu &quot;yyyy&quot;" />
     <MESSAGE value="toString() geändert. bessere Darstellung, Anschaffungsdatum an die richtige Stelle" />
     <MESSAGE value="toString() und print erstellt()" />
@@ -455,7 +462,8 @@
     <MESSAGE value="Inventur überarbeiet, Doz hinzufügen implementiert" />
     <MESSAGE value="Terminplan DozAuswahl, Listener DozAuswahl vorbereitet" />
     <MESSAGE value="Refactoring von Bezeichnungen" />
-    <option name="LAST_COMMIT_MESSAGE" value="Refactoring von Bezeichnungen" />
+    <MESSAGE value="Feinheiten GUI" />
+    <option name="LAST_COMMIT_MESSAGE" value="Feinheiten GUI" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
